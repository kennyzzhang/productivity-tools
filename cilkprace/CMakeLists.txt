# Build for the Cilkgraph runtime support library.

set(CILKPRACE_SOURCES
  cilkprace.cpp
  csirt.cpp
  )

include_directories(${CILKTOOLS_SOURCE_DIR}/include)

set(CILKPRACE_CFLAGS ${SANITIZER_COMMON_CFLAGS})
append_list_if(CILKTOOLS_HAS_CILK -fopencilk CILKPRACE_CFLAGS)
append_list_if(CILKTOOLS_HAS_FDEBUG_DEFAULT_VERSION_EQ_4_FLAG
  -fdebug-default-version=4 CILKPRACE_CFLAGS)
append_rtti_flag(OFF CILKPRACE_CFLAGS)

set(CILKPRACE_COMMON_DEFINITIONS)
append_list_if(CILKTOOLS_HAS_CILK SERIAL_TOOL=0 CILKPRACE_COMMON_DEFINITIONS)

set(CILKPRACE_DYNAMIC_LINK_FLAGS)
append_list_if(CILKTOOLS_HAS_CILK -fopencilk CILKPRACE_DYNAMIC_LINK_FLAGS)

set(CILKPRACE_DYNAMIC_CFLAGS ${CILKPRACE_CFLAGS})
set(CILKPRACE_DYNAMIC_DEFINITIONS ${CILKPRACE_COMMON_DEFINITIONS})

set(CILKPRACE_COMMON_LIBS ${SANITIZER_CXX_ABI_LIBRARY} ${SANITIZER_COMMON_LINK_LIBS})

set(CILKPRACE_DYNAMIC_LIBS ${CILKPRACE_COMMON_LIBS})

# Build Cilkgraph runtimes shipped with Clang.
add_cilktools_component(cilkprace)

if (APPLE)
    add_cilktools_runtime(clang_rt.cilkprace
      STATIC
      OS ${CILKTOOL_SUPPORTED_OS}
      ARCHS ${CILKPRACE_SUPPORTED_ARCH}
      SOURCES ${CILKPRACE_SOURCES}
      CFLAGS ${CILKPRACE_CFLAGS}
      DEFS ${CILKPRACE_COMMON_DEFINITIONS}
      PARENT_TARGET cilkprace)

    add_cilktools_runtime(clang_rt.cilkprace
      SHARED
      OS ${CILKTOOL_SUPPORTED_OS}
      ARCHS ${CILKPRACE_SUPPORTED_ARCH}
      SOURCES ${CILKPRACE_SOURCES}
      CFLAGS ${CILKPRACE_DYNAMIC_CFLAGS}
      LINK_FLAGS ${CILKPRACE_DYNAMIC_LINK_FLAGS}
      LINK_LIBS ${CILKPRACE_DYNAMIC_LIBS}
      DEFS ${CILKPRACE_DYNAMIC_DEFINITIONS}
      PARENT_TARGET cilkprace)

else()
  foreach (arch ${CILKPRACE_SUPPORTED_ARCH})
    add_cilktools_runtime(clang_rt.cilkprace
      STATIC
      ARCHS ${arch}
      SOURCES ${CILKPRACE_SOURCES}
      CFLAGS ${CILKPRACE_CFLAGS}
      DEFS ${CILKPRACE_COMMON_DEFINITIONS}
      PARENT_TARGET cilkprace)

    add_cilktools_runtime(clang_rt.cilkprace
      SHARED
      ARCHS ${arch}
      SOURCES ${CILKPRACE_SOURCES}
      CFLAGS ${CILKPRACE_DYNAMIC_CFLAGS}
      LINK_FLAGS ${CILKPRACE_DYNAMIC_LINK_FLAGS}
      LINK_LIBS ${CILKPRACE_DYNAMIC_LIBS}
      DEFS ${CILKPRACE_DYNAMIC_DEFINITIONS}
      PARENT_TARGET cilkprace)
  endforeach()
endif()

if (CILKTOOLS_INCLUDE_TESTS)
  # TOdo: Add tests
endif()
